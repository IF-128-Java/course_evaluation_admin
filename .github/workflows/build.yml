name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  runner-job:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.COURSE_EVALUATION_ADMIN_DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.COURSE_EVALUATION_ADMIN_DB_PASSWORD }}
          POSTGRES_DB: course_evaluation

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          course_evaluation_admin_JWT_header: ${{ secrets.course_evaluation_admin_JWT_header }}
          course_evaluation_admin_JWT_secret: ${{ secrets.course_evaluation_admin_JWT_secret }}
          jwt.authentication_scheme: ${{ secrets.jwt.authentication_scheme }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
